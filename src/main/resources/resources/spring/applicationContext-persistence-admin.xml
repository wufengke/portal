<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd">

	<bean id="pooledDataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="driver">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="driverUrl">
			<value>${jdbc.url}</value>
		</property>
		<property name="user">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<property name="alias">
			<value>DBPool</value>
		</property>
		<property name="prototypeCount">
			<value>10</value>
		</property>
		<property name="maximumConnectionCount">
			<value>${maximumConnectionCount}</value>
		</property>
		<property name="minimumConnectionCount">
			<value>${minimumConnectionCount}</value>
		</property>
		<property name="trace">
			<value>false</value>
		</property>
		<property name="verbose">
			<value>true</value>
		</property>
		<property name="simultaneousBuildThrottle">
			<value>100</value>
		</property>
		<property name="houseKeepingTestSql">
			<value>select 1 </value>
		</property>
	</bean>
	
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
		<property name="targetDataSource">
			<ref bean="pooledDataSource"/>
		</property>
	</bean>
	
    <!-- 配置SessionFactory,基于注解的方式查找实体bean-->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.cyou.base.bean.Role</value>
				<value>com.cyou.base.bean.Users</value>
				<value>com.cyou.base.bean.UserRole</value>
				<value>com.cyou.base.bean.Account</value>
				<value>com.cyou.course.bean.Course</value>
				<value>com.cyou.course.bean.CourseDetail</value>
				<value>com.cyou.infor.bean.ApplyTeach</value>
				<value>com.cyou.pay.bean.UserOrder</value>
				<value>com.cyou.login.bean.PasswordResetRecord</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>	
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
			</props>
		</property>
	</bean>
	<!-- 配置事务管理 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 配置注解实现管理事务（cglib：proxy-target-class="true"） -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
</beans>